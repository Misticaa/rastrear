class d{static formatCPF(e){const a=e.replace(/[^\d]/g,"");return a.length<=11?a.replace(/(\d{3})(\d{3})(\d{3})(\d{2})/,"$1.$2.$3-$4"):e}static cleanCPF(e){return e.replace(/[^\d]/g,"")}static isValidCPF(e){const a=this.cleanCPF(e);return a.length!==11||/^(\d)\1{10}$/.test(a)?!1:this.validateCPFDigits(a)}static validateCPFDigits(e){let a=0;for(let o=0;o<9;o++)a+=parseInt(e.charAt(o))*(10-o);let r=11-a%11;if((r>=10?0:r)!==parseInt(e.charAt(9)))return!1;a=0;for(let o=0;o<10;o++)a+=parseInt(e.charAt(o))*(11-o);return r=11-a%11,(r>=10?0:r)===parseInt(e.charAt(10))}static applyCPFMask(e){let a=e.value.replace(/[^\d]/g,"");return a.length>11&&(a=a.slice(0,11)),a.length>9?a=a.replace(/(\d{3})(\d{3})(\d{3})(\d{2})/,"$1.$2.$3-$4"):a.length>6?a=a.replace(/(\d{3})(\d{3})(\d{3})/,"$1.$2.$3"):a.length>3&&(a=a.replace(/(\d{3})(\d{3})/,"$1.$2")),e.value=a,a}}console.warn("⚠️ Variáveis do Supabase não configuradas. Usando modo fallback.");const n=null,i=()=>n!==null;class u{constructor(){this.isConfigured=i(),this.isConfigured||console.warn("⚠️ Supabase não configurado. Usando armazenamento local como fallback.")}async createLead(e){if(!this.isConfigured)return this.createLeadFallback(e);try{const{data:a,error:r}=await n.from("leads").insert([e]).select().single();return r?(console.error("Erro ao criar lead:",r),this.createLeadFallback(e)):(console.log("✅ Lead criado no Supabase:",a),{success:!0,data:a})}catch(a){return console.error("Erro na criação do lead:",a),this.createLeadFallback(e)}}async getLeadByCPF(e){if(!this.isConfigured)return this.getLeadByCPFFallback(e);try{const{data:a,error:r}=await n.from("leads").select("*").eq("cpf",e.replace(/[^\d]/g,"")).single();return r&&r.code!=="PGRST116"?(console.error("Erro ao buscar lead:",r),this.getLeadByCPFFallback(e)):{success:!0,data:a||null}}catch(a){return console.error("Erro na busca do lead:",a),this.getLeadByCPFFallback(e)}}async updateLeadStage(e,a){if(!this.isConfigured)return this.updateLeadStageFallback(e,a);try{const{data:r,error:t}=await n.from("leads").update({etapa_atual:a}).eq("cpf",e.replace(/[^\d]/g,"")).select().single();return t?(console.error("Erro ao atualizar etapa:",t),this.updateLeadStageFallback(e,a)):(console.log("✅ Etapa atualizada no Supabase:",r),{success:!0,data:r})}catch(r){return console.error("Erro na atualização da etapa:",r),this.updateLeadStageFallback(e,a)}}async updatePaymentStatus(e,a){if(!this.isConfigured)return this.updatePaymentStatusFallback(e,a);try{const{data:r,error:t}=await n.from("leads").update({status_pagamento:a}).eq("cpf",e.replace(/[^\d]/g,"")).select().single();return t?(console.error("Erro ao atualizar status de pagamento:",t),this.updatePaymentStatusFallback(e,a)):(console.log("✅ Status de pagamento atualizado no Supabase:",r),{success:!0,data:r})}catch(r){return console.error("Erro na atualização do status de pagamento:",r),this.updatePaymentStatusFallback(e,a)}}createLeadFallback(e){try{const a=JSON.parse(localStorage.getItem("leads")||"[]"),r={...e,id:Date.now().toString(),created_at:new Date().toISOString(),updated_at:new Date().toISOString()};return a.push(r),localStorage.setItem("leads",JSON.stringify(a)),console.log("✅ Lead criado no localStorage:",r),{success:!0,data:r}}catch(a){return console.error("Erro no fallback de criação:",a),{success:!1,error:a.message}}}getLeadByCPFFallback(e){try{return{success:!0,data:JSON.parse(localStorage.getItem("leads")||"[]").find(t=>t.cpf===e.replace(/[^\d]/g,""))||null}}catch(a){return console.error("Erro no fallback de busca:",a),{success:!1,error:a.message}}}updateLeadStageFallback(e,a){try{const r=JSON.parse(localStorage.getItem("leads")||"[]"),t=r.findIndex(s=>s.cpf===e.replace(/[^\d]/g,""));return t!==-1?(r[t].etapa_atual=a,r[t].updated_at=new Date().toISOString(),localStorage.setItem("leads",JSON.stringify(r)),console.log("✅ Etapa atualizada no localStorage:",r[t]),{success:!0,data:r[t]}):{success:!1,error:"Lead não encontrado"}}catch(r){return console.error("Erro no fallback de atualização:",r),{success:!1,error:r.message}}}updatePaymentStatusFallback(e,a){try{const r=JSON.parse(localStorage.getItem("leads")||"[]"),t=r.findIndex(s=>s.cpf===e.replace(/[^\d]/g,""));return t!==-1?(r[t].status_pagamento=a,r[t].updated_at=new Date().toISOString(),localStorage.setItem("leads",JSON.stringify(r)),console.log("✅ Status de pagamento atualizado no localStorage:",r[t]),{success:!0,data:r[t]}):{success:!1,error:"Lead não encontrado"}}catch(r){return console.error("Erro no fallback de atualização de pagamento:",r),{success:!1,error:r.message}}}}class g{static parseURLParams(){const e=new URLSearchParams(window.location.search),a={},r={nome:"nome_completo",name:"nome_completo",cpf:"cpf",email:"email",telefone:"telefone",phone:"telefone",endereco:"endereco",address:"endereco",valor:"valor_total",amount:"valor_total",payment:"meio_pagamento",pagamento:"meio_pagamento"};for(const[t,s]of Object.entries(r)){const o=e.get(t);o&&(a[s]=decodeURIComponent(o))}return a.order_bumps=this.extractOrderBumps(e),a.origem="vega",a.data_compra=new Date().toISOString(),a.produtos=[{nome:"Kit 12 caixas organizadoras + brinde",preco:a.valor_total||0,imagem:"/traduza-have-you-propose copy.png"}],a}static extractOrderBumps(e){const a=[];return[{id:"bump1",nome:"Pague em Até 5 Minutos e Ganhe Mais 3 Caixas Organizadoras",preco:0,imagem:"/traduza-have-you-propose copy.png",params:["bump1","bonus_caixas","extra_caixas"]},{id:"bump2",nome:"Leve Mais 8 Caixas Pela Metade do Preço",preco:39.9,imagem:"/traduza-have-you-propose copy.png",params:["bump2","caixas_extras","mais_caixas"]},{id:"bump3",nome:"Kit de 6 Potes Herméticos",preco:29.9,imagem:"/traduza-have-you-propose copy.png",params:["bump3","potes","hermeticos"]}].forEach(t=>{t.params.some(o=>{const l=e.get(o);return l&&(l==="1"||l==="true"||l==="yes")})&&a.push(t)}),a}static generateMockVegaData(e){const a=["João Silva Santos","Maria Oliveira Costa","Pedro Souza Lima","Ana Paula Ferreira","Carlos Eduardo Alves","Fernanda Santos Rocha"],r=["joao.silva@email.com","maria.costa@email.com","pedro.lima@email.com","ana.ferreira@email.com","carlos.alves@email.com","fernanda.rocha@email.com"],t=["Rua das Flores, 123 - Centro - São Paulo/SP - CEP: 01234-567","Av. Paulista, 456 - Bela Vista - São Paulo/SP - CEP: 01310-100","Rua Augusta, 789 - Consolação - São Paulo/SP - CEP: 01305-000"],s=parseInt(e.slice(-2))%a.length;return{nome_completo:a[s],cpf:e,email:r[s],telefone:`(11) 9${e.slice(-8)}`,endereco:t[s%t.length],valor_total:67.9,meio_pagamento:"PIX",origem:"vega",data_compra:new Date().toISOString(),produtos:[{nome:"Kit 12 caixas organizadoras + brinde",preco:67.9,imagem:"/traduza-have-you-propose copy.png"}],order_bumps:[{id:"bump2",nome:"Leve Mais 8 Caixas Pela Metade do Preço",preco:39.9,imagem:"/traduza-have-you-propose copy.png"}]}}static isVegaOrigin(){const e=new URLSearchParams(window.location.search);return e.get("origem")==="vega"||e.has("nome")||e.has("name")||e.has("vega")}}export{d as C,u as D,g as V};
