class d{static formatCPF(r){const e=r.replace(/[^\d]/g,"");return e.length<=11?e.replace(/(\d{3})(\d{3})(\d{3})(\d{2})/,"$1.$2.$3-$4"):r}static cleanCPF(r){return r.replace(/[^\d]/g,"")}static isValidCPF(r){const e=this.cleanCPF(r);return e.length!==11||/^(\d)\1{10}$/.test(e)?!1:this.validateCPFDigits(e)}static validateCPFDigits(r){let e=0;for(let s=0;s<9;s++)e+=parseInt(r.charAt(s))*(10-s);let a=11-e%11;if((a>=10?0:a)!==parseInt(r.charAt(9)))return!1;e=0;for(let s=0;s<10;s++)e+=parseInt(r.charAt(s))*(11-s);return a=11-e%11,(a>=10?0:a)===parseInt(r.charAt(10))}static applyCPFMask(r){let e=r.value.replace(/[^\d]/g,"");return e.length>11&&(e=e.slice(0,11)),e.length>9?e=e.replace(/(\d{3})(\d{3})(\d{3})(\d{2})/,"$1.$2.$3-$4"):e.length>6?e=e.replace(/(\d{3})(\d{3})(\d{3})/,"$1.$2.$3"):e.length>3&&(e=e.replace(/(\d{3})(\d{3})/,"$1.$2")),r.value=e,e}}console.warn("⚠️ Variáveis do Supabase não configuradas. Usando modo fallback.");const n=null,i=()=>n!==null;class u{constructor(){this.isConfigured=i(),this.isConfigured||console.warn("⚠️ Supabase não configurado. Usando armazenamento local como fallback.")}async createLead(r){if(!this.isConfigured)return this.createLeadFallback(r);try{const e={...r,initial_timestamp:r.initial_timestamp||new Date().toISOString(),liberation_paid:!1,delivery_attempts:0,liberation_date:null},{data:a,error:t}=await n.from("leads").insert([e]).select().single();return t?(console.error("Erro ao criar lead:",t),this.createLeadFallback(e)):(console.log("✅ Lead criado no Supabase:",a),{success:!0,data:a})}catch(e){return console.error("Erro na criação do lead:",e),this.createLeadFallback(leadWithTimestamp)}}async getLeadByCPF(r){if(!this.isConfigured)return this.getLeadByCPFFallback(r);try{const{data:e,error:a}=await n.from("leads").select("*").eq("cpf",r.replace(/[^\d]/g,"")).single();return a&&a.code!=="PGRST116"?(console.error("Erro ao buscar lead:",a),this.getLeadByCPFFallback(r)):{success:!0,data:e||null}}catch(e){return console.error("Erro na busca do lead:",e),this.getLeadByCPFFallback(r)}}async updateLeadStage(r,e){if(!this.isConfigured)return this.updateLeadStageFallback(r,e);try{const{data:a,error:t}=await n.from("leads").update({etapa_atual:e}).eq("cpf",r.replace(/[^\d]/g,"")).select().single();return t?(console.error("Erro ao atualizar etapa:",t),this.updateLeadStageFallback(r,e)):(console.log("✅ Etapa atualizada no Supabase:",a),{success:!0,data:a})}catch(a){return console.error("Erro na atualização da etapa:",a),this.updateLeadStageFallback(r,e)}}async updatePaymentStatus(r,e){if(!this.isConfigured)return this.updatePaymentStatusFallback(r,e);try{const{data:a,error:t}=await n.from("leads").update({status_pagamento:e}).eq("cpf",r.replace(/[^\d]/g,"")).select().single();return t?(console.error("Erro ao atualizar status de pagamento:",t),this.updatePaymentStatusFallback(r,e)):(console.log("✅ Status de pagamento atualizado no Supabase:",a),{success:!0,data:a})}catch(a){return console.error("Erro na atualização do status de pagamento:",a),this.updatePaymentStatusFallback(r,e)}}async updateLeadTimeline(r,e){if(!this.isConfigured)return this.updateLeadTimelineFallback(r,e);try{const{data:a,error:t}=await n.from("leads").update({timeline_data:e,updated_at:new Date().toISOString()}).eq("cpf",r.replace(/[^\d]/g,"")).select().single();return t?(console.error("Erro ao atualizar timeline:",t),this.updateLeadTimelineFallback(r,e)):(console.log("✅ Timeline atualizada no Supabase:",a),{success:!0,data:a})}catch(a){return console.error("Erro na atualização da timeline:",a),this.updateLeadTimelineFallback(r,e)}}createLeadFallback(r){try{const e=JSON.parse(localStorage.getItem("leads")||"[]"),a={...r,id:Date.now().toString(),created_at:new Date().toISOString(),updated_at:new Date().toISOString(),initial_timestamp:r.initial_timestamp||new Date().toISOString()};return e.push(a),localStorage.setItem("leads",JSON.stringify(e)),console.log("✅ Lead criado no localStorage:",a),{success:!0,data:a}}catch(e){return console.error("Erro no fallback de criação:",e),{success:!1,error:e.message}}}getLeadByCPFFallback(r){try{return{success:!0,data:JSON.parse(localStorage.getItem("leads")||"[]").find(t=>t.cpf===r.replace(/[^\d]/g,""))||null}}catch(e){return console.error("Erro no fallback de busca:",e),{success:!1,error:e.message}}}updateLeadStageFallback(r,e){try{const a=JSON.parse(localStorage.getItem("leads")||"[]"),t=a.findIndex(o=>o.cpf===r.replace(/[^\d]/g,""));return t!==-1?(a[t].etapa_atual=e,a[t].updated_at=new Date().toISOString(),localStorage.setItem("leads",JSON.stringify(a)),console.log("✅ Etapa atualizada no localStorage:",a[t]),{success:!0,data:a[t]}):{success:!1,error:"Lead não encontrado"}}catch(a){return console.error("Erro no fallback de atualização:",a),{success:!1,error:a.message}}}updatePaymentStatusFallback(r,e){try{const a=JSON.parse(localStorage.getItem("leads")||"[]"),t=a.findIndex(o=>o.cpf===r.replace(/[^\d]/g,""));return t!==-1?(a[t].status_pagamento=e,a[t].updated_at=new Date().toISOString(),localStorage.setItem("leads",JSON.stringify(a)),console.log("✅ Status de pagamento atualizado no localStorage:",a[t]),{success:!0,data:a[t]}):{success:!1,error:"Lead não encontrado"}}catch(a){return console.error("Erro no fallback de atualização de pagamento:",a),{success:!1,error:a.message}}}updateLeadTimelineFallback(r,e){try{const a=JSON.parse(localStorage.getItem("leads")||"[]"),t=a.findIndex(o=>o.cpf===r.replace(/[^\d]/g,""));return t!==-1?(a[t].timeline_data=e,a[t].updated_at=new Date().toISOString(),localStorage.setItem("leads",JSON.stringify(a)),console.log("✅ Timeline atualizada no localStorage:",a[t]),{success:!0,data:a[t]}):{success:!1,error:"Lead não encontrado"}}catch(a){return console.error("Erro no fallback de atualização de timeline:",a),{success:!1,error:a.message}}}updateLiberationStatusFallback(r,e,a){try{const t=JSON.parse(localStorage.getItem("leads")||"[]"),o=t.findIndex(s=>s.cpf===r.replace(/[^\d]/g,""));return o!==-1?(t[o].liberation_paid=e,t[o].liberation_date=a||new Date().toISOString(),t[o].updated_at=new Date().toISOString(),localStorage.setItem("leads",JSON.stringify(t)),console.log("✅ Status de liberação atualizado no localStorage:",t[o]),{success:!0,data:t[o]}):{success:!1,error:"Lead não encontrado"}}catch(t){return console.error("Erro no fallback de atualização de liberação:",t),{success:!1,error:t.message}}}updateDeliveryAttemptsFallback(r,e){try{const a=JSON.parse(localStorage.getItem("leads")||"[]"),t=a.findIndex(o=>o.cpf===r.replace(/[^\d]/g,""));return t!==-1?(a[t].delivery_attempts=e,a[t].updated_at=new Date().toISOString(),localStorage.setItem("leads",JSON.stringify(a)),console.log("✅ Tentativas de entrega atualizadas no localStorage:",a[t]),{success:!0,data:a[t]}):{success:!1,error:"Lead não encontrado"}}catch(a){return console.error("Erro no fallback de atualização de tentativas:",a),{success:!1,error:a.message}}}}class g{static parseURLParams(){const r=new URLSearchParams(window.location.search),e={},a={nome:"nome_completo",name:"nome_completo",cpf:"cpf",email:"email",telefone:"telefone",phone:"telefone",endereco:"endereco",address:"endereco",valor:"valor_total",amount:"valor_total",payment:"meio_pagamento",pagamento:"meio_pagamento"};for(const[t,o]of Object.entries(a)){const s=r.get(t);s&&(e[o]=decodeURIComponent(s))}return e.order_bumps=this.extractOrderBumps(r),e.origem="vega",e.data_compra=new Date().toISOString(),e.produtos=[{nome:"Kit 12 caixas organizadoras + brinde",preco:e.valor_total||0,imagem:"/traduza-have-you-propose copy.png"}],e}static extractOrderBumps(r){const e=[];return[{id:"bump1",nome:"Pague em Até 5 Minutos e Ganhe Mais 3 Caixas Organizadoras",preco:0,imagem:"/traduza-have-you-propose copy.png",params:["bump1","bonus_caixas","extra_caixas"]},{id:"bump2",nome:"Leve Mais 8 Caixas Pela Metade do Preço",preco:39.9,imagem:"/traduza-have-you-propose copy.png",params:["bump2","caixas_extras","mais_caixas"]},{id:"bump3",nome:"Kit de 6 Potes Herméticos",preco:29.9,imagem:"/traduza-have-you-propose copy.png",params:["bump3","potes","hermeticos"]}].forEach(t=>{t.params.some(s=>{const l=r.get(s);return l&&(l==="1"||l==="true"||l==="yes")})&&e.push(t)}),e}static generateMockVegaData(r){const e=["João Silva Santos","Maria Oliveira Costa","Pedro Souza Lima","Ana Paula Ferreira","Carlos Eduardo Alves","Fernanda Santos Rocha"],a=["joao.silva@email.com","maria.costa@email.com","pedro.lima@email.com","ana.ferreira@email.com","carlos.alves@email.com","fernanda.rocha@email.com"],t=["Rua das Flores, 123 - Centro - São Paulo/SP - CEP: 01234-567","Av. Paulista, 456 - Bela Vista - São Paulo/SP - CEP: 01310-100","Rua Augusta, 789 - Consolação - São Paulo/SP - CEP: 01305-000"],o=parseInt(r.slice(-2))%e.length;return{nome_completo:e[o],cpf:r,email:a[o],telefone:`(11) 9${r.slice(-8)}`,endereco:t[o%t.length],valor_total:67.9,meio_pagamento:"PIX",origem:"vega",data_compra:new Date().toISOString(),produtos:[{nome:"Kit 12 caixas organizadoras + brinde",preco:67.9,imagem:"/traduza-have-you-propose copy.png"}],order_bumps:[{id:"bump2",nome:"Leve Mais 8 Caixas Pela Metade do Preço",preco:39.9,imagem:"/traduza-have-you-propose copy.png"}]}}static isVegaOrigin(){const r=new URLSearchParams(window.location.search);return r.get("origem")==="vega"||r.has("nome")||r.has("name")||r.has("vega")}}export{d as C,u as D,g as V};
